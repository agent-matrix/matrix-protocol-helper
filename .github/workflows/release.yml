name: Release

on:
  push:
    tags:
      - "v*.*.*" # e.g. v0.1.0
  workflow_dispatch: {}

permissions:
  contents: write # required to create/update releases

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: "" # set --target if you need separate arm/x64 mac builds
          - platform: ubuntu-22.04
            args: ""
          - platform: windows-latest
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # FIX: Replaced pnpm caching with npm caching
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux deps (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev \
            libappindicator3-dev librsvg2-dev patchelf build-essential

      # FIX: Replaced 'pnpm install' with 'npm ci' for clean, reproducible installs
      - name: Install frontend deps
        run: npm ci

      # Build, create release (if needed), and upload bundles.
      - name: Build app and upload to Release
        id: tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # uses version from tauri.conf.json
          releaseName: "Matrix Protocol Helper v__VERSION__"
          releaseBody: "See the assets below for platform-specific installers and checksums."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      # Generate SHA256SUMS.txt for the artifacts produced on this runner
      - name: Generate checksums
        shell: bash
        run: |
          set -euo pipefail
          # The tauri-action outputs a JSON string of artifact paths.
          # We'll parse it and generate checksums for each file.
          echo '${{ steps.tauri.outputs.artifactPaths }}' | \
          jq -r '.[] | select(. | endswith(".AppImage") or endswith(".deb") or endswith(".rpm") or endswith(".dmg") or endswith(".msi"))' | \
          xargs -I % sh -c 'sha256sum "%" >> SHA256SUMS.txt'

      - name: Upload checksums to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.tauri.outputs.appVersion }}
          files: SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}