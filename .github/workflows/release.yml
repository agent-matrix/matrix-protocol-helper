# .github/workflows/release.yml
# This workflow creates a GitHub release and builds the application for macOS,
# Windows, and Linux when a new version tag (e.g., v1.0.0) is pushed.

name: Release

on:
  push:
    tags:
      - "v*.*.*" # e.g. v0.1.0
  workflow_dispatch: {}

permissions:
  contents: write # required to create/update releases

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: ""
          - platform: ubuntu-22.04
            args: ""
          - platform: windows-latest
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with npm caching
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm" # Use the built-in caching for npm

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev \
            libappindicator3-dev librsvg2-dev patchelf build-essential

      - name: Install frontend dependencies
        run: npm ci # Use 'ci' for clean, reproducible installs from package-lock.json

      - name: Build app and upload to Release
        id: tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Matrix Protocol Helper ${{ github.ref_name }}"
          releaseBody: "See the assets below for platform-specific installers and checksums."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Generate checksums
        if: steps.tauri.outputs.artifactPaths
        shell: bash
        run: |
          set -euo pipefail
          # The tauri-action outputs a JSON string of artifact paths.
          # We'll parse it and generate checksums for each file.
          echo '${{ steps.tauri.outputs.artifactPaths }}' | \
          jq -r '.[]' | \
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              sha256sum "$file" >> SHA256SUMS.txt
            fi
          done

      - name: Upload checksums to Release
        if: steps.tauri.outputs.appVersion && hashFiles('SHA256SUMS.txt')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
